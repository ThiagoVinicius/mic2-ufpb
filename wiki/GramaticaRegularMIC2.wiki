#summary One-sentence summary of this page.

= Introduction =

*Derivação da árvore gramatical à direita*

= Details =

`<Address1>` -> digit <Address2>`

`<Address2> -> x <Digit>` 

`<Command1> -> fetch <OperatorPoint>`

`<Command2> -> goto <Const2> | rd <Const1> | wr <Const1>`

`<Conditional1> -> alpha = <Conditional2> | alpha <Conditional1>`

`<Conditional2> -> idReg ; <Conditional3> | idReg + idReg ; <Conditional3> | 
                   idReg - idReg ; <Conditional3> | idReg and idReg ; <Conditional3> |  idReg or idReg ; <Conditional3> | not idReg ; <Conditional3> |
		neg idReg ; <Conditional3>`

<Conditional3> -> if alpha <Conditional4>

<Conditional4> -> alpha <Conditional4> | goto <Conditional5> | rd <Conditional5> |  wr <Conditional5> |
		  fetch ; <Conditional6> | rd ; <Conditional6> | wr ; <Conditional6>

<Conditional5> -> alpha ; <Conditional6> | alpha <Conditional5> 
 
<Conditional6> -> else goto <Const2> | rd <OperatorPoint> | rd <Const2>  | wr <OperatorPoint> | 
		  wr <Const2> | fetch <OperatorPoint>

<Const1> -> λ | alpha <Const> | alpha <Digit> | alpha <OperatorPoint>

<Const2> -> alpha | alpha <Const> | alpha <Digit> | alpha <OperatorPoint>

<Digit> -> digit | digit <OperatorPoint>

<OperatorArith> -> - <Register> | + <Register> | + <Digit> | - <Digit>

<OperatorLogic1> -> and <Register> | or <Register> | and <Address1> | or <Address1>

<OperatorLogic2> -> not <Register> | neg <Register>

<OperatorDealoc> -> << <Digit>

<OperatorEqual> -> = <Register> | = <OperatorLogic2>

<OperatorPoint> -> ; <command1> | ; <command2>

<Register> -> idReg | idReg <OperatorEqual> | idReg <OperatorPoint> | idReg <OperatorLogic> | idReg <OperatorDealoc>



idReg := mar, mdr, pc, mbr, sp, lv, cpp, tos, opc, h

alpha := a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z

digit := 0, 1, 2, 3, 4, 5, 6, 7, 8, 9



*OBS1:* sujeita a modificações
*OBS2:* aprovada por Thiago