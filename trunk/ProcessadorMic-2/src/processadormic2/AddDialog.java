/*
 * AddDialog.java
 *
 * Created on 29 de Mar√ßo de 2009, 15:14
 */

package processadormic2;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Formatter;
import java.util.NoSuchElementException;
import java.util.Scanner;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
/**
 *
 * @author  Duilio
 */
public class AddDialog extends javax.swing.JDialog {

    static final Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    private static final Dimension appSize = new Dimension(390, 375);
    private static final int appPosX = (screenSize.width / 2) - (appSize.width / 2);
    private static final int appPosY = (int)(screenSize.height / 1.95) - (appSize.height / 2);
    private static Rectangle appBounds = new Rectangle(appPosX, appPosY, appSize.width, appSize.height);

    javax.swing.JPanel contentpanel = null;

    String matrix[][] = null ;
    
    JPanel microprogPanel;
    NovaInstrucaoTableModel model;
    JTable  microprogTable;

    String Nome;
    String ADDR;
    String ADDRfixo;
    String Mem = "00";
    String BarramentoA="000", BarramentoB="0000";//
    String ULA = "000000";//
    String parteMI[] = new String[20];
    String codMI[] = new String[15];
    boolean Aselecionado, Bselecionado;
    boolean IFZselecionado, IFNselecionado;
    boolean AcessoMem;
    boolean Gotoselecionado;    
    boolean opULA;
    char arrayC[] =  {'0','0','0','0','0','0','0','0','0'};
    char JMP[] = {'0','0','0'};
    int numeroMI =0, numeroDaParteMI =0;


    
    
    /** Creates new form AddDialog */
    public AddDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setBounds(appBounds);
        initContentPane();
        
    }

    public void setDados(String name,String codh){
        Nome = name;
        ADDR = codh;
        ADDRfixo= codh;
    }
    public void initContentPane(){
        contentpanel = new javax.swing.JPanel(new BorderLayout());
        contentpanel.add(jPanel1,BorderLayout.CENTER);
        microprogPanel = new JPanel(new BorderLayout());
        microprogPanel.setPreferredSize(new Dimension(360,100));
        matrix = new String[4][2];
        for(int i = 0; i<4;i++)
            for(int k = 0;k<2;k++)
                matrix[i][k] = "";
        model = new NovaInstrucaoTableModel(4,matrix);
        microprogTable = new JTable(model);        
        microprogTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        microprogTable.getColumnModel().getColumn(1).setPreferredWidth(295);
        microprogPanel .add(new JScrollPane(microprogTable), BorderLayout.CENTER);
        jPanel2.add(microprogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, -1));
        
        this.setContentPane(contentpanel);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("MDR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 50, -1));

        jButton2.setText("MAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 50, -1));

        jButton3.setText("PC");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 50, -1));

        jButton4.setText("MBR2");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 50, -1));

        jButton5.setText("SP");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 50, -1));

        jButton6.setText("LV");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 50, -1));

        jButton7.setText("CPP");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 50, -1));

        jButton8.setText("TOS");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 50, -1));

        jButton9.setText("OPC");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 50, -1));

        jButton10.setText("CE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 50, -1));

        jButton11.setText("H");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 50, -1));

        jButton12.setText("+");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 50, -1));

        jButton13.setText("-");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 50, -1));

        jButton14.setText("1");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 50, -1));

        jButton15.setText("AND");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 50, -1));

        jButton16.setText("OR");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 50, -1));

        jButton17.setText("IF Z;");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 50, -1));

        jButton18.setText("IF N;");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 50, -1));

        jButton19.setText("RD;");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 50, -1));

        jButton20.setText("WR;");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 50, -1));

        jButton21.setText("=");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 60, -1));

        jButton22.setText("Goto Addr;");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 120, -1));

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 360, -1));

        jButton23.setText("Cancelar");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 90, -1));

        jButton24.setText("Compilar");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 90, -1));

        jButton26.setText("Enviar");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 310, 90, -1));

        jButton27.setText("Goto MBR1;");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 120, -1));

        jButton28.setText("C");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 50, -1));

        jButton29.setText(";");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 50, -1));

        jButton30.setText("MBR1");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 50, -1));

        jButton31.setText("MBR1U");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 60, -1));

        jButton25.setText("?");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 50, -1));

        jButton32.setText("MBR2U");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 60, -1));

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adicione Nova Instru√ß√£o");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "IF N;";
            jTextField1.setText(jTextField1.getText() + "  IF N;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MAR";
            jTextField1.setText(jTextField1.getText() + "  MAR" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MDR";
            jTextField1.setText(jTextField1.getText() + "  MDR" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "PC";
            jTextField1.setText(jTextField1.getText() + "  PC" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MBR2";
            jTextField1.setText(jTextField1.getText() + "  MBR2" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "SP";
            jTextField1.setText(jTextField1.getText() + "  SP" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "LV";
            jTextField1.setText(jTextField1.getText() + "  LV" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "CPP";
            jTextField1.setText(jTextField1.getText() + "  CPP" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "TOS";
            jTextField1.setText(jTextField1.getText() + "  TOS" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "OPC";
            jTextField1.setText(jTextField1.getText() + "  OPC" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "H";
            jTextField1.setText(jTextField1.getText() + "  H" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "+";
            jTextField1.setText(jTextField1.getText() + "  +" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "-";
            jTextField1.setText(jTextField1.getText() + "  -" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "1";
            jTextField1.setText(jTextField1.getText() + "  1" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "AND";
            jTextField1.setText(jTextField1.getText() + "  AND" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "OR";
            jTextField1.setText(jTextField1.getText() + "  OR" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "IF Z;";
            jTextField1.setText(jTextField1.getText() + "  IF Z;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "RD;";
            jTextField1.setText(jTextField1.getText() + "  RD;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "WR;";
            jTextField1.setText(jTextField1.getText() + "  WR;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "=";
            jTextField1.setText(jTextField1.getText() + "  =" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "Goto Addr;";
            jTextField1.setText(jTextField1.getText() + "  Goto Addr;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "Goto MBR1;";
            jTextField1.setText(jTextField1.getText() + "  Goto MBR1;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = ";";
            jTextField1.setText(jTextField1.getText() + " ;" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        if(numeroDaParteMI>0){
            numeroDaParteMI--;
            jTextField1.setText("");
            for(int i = 0; i< numeroDaParteMI; i++){
                jTextField1.setText(jTextField1.getText() + "  " + parteMI[i] );
            }
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        numeroDaParteMI=0;
        jTextField1.setText("");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed

        int resultadoComp;

        resultadoComp = Compila();
        if(resultadoComp == 1){
            Mem = "00";
            BarramentoA="000"; BarramentoB="0000";//
            ULA = "000000";//
            parteMI = new String[20];
            Aselecionado = false; Bselecionado= false;
            IFZselecionado = false; IFNselecionado = false;
            AcessoMem = false;
            Gotoselecionado = false;
            opULA = false;
            char arrayaux[] =  {'0','0','0','0','0','0','0','0','0'};
            arrayC =  arrayaux;
            char arrayaux2[] = {'0','0','0'};
            JMP =arrayaux2;
            numeroDaParteMI =0;
            jTextField1.setText("");
            microprogTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            microprogTable.getColumnModel().getColumn(1).setPreferredWidth(285);

            
        }
        else{
            Mem = "00";
            BarramentoA="000"; BarramentoB="0000";//
            ULA = "000000";            
            Aselecionado = false; Bselecionado= false;
            IFZselecionado = false; IFNselecionado = false;
            AcessoMem = false;
            Gotoselecionado = false;
            opULA = false;
            char arrayaux[] =  {'0','0','0','0','0','0','0','0','0'};
            arrayC =  arrayaux;
            char arrayaux2[] = {'0','0','0'};
            JMP =arrayaux2;
            
            
        }// ajeita as variaveis
    


        
    }//GEN-LAST:event_jButton24ActionPerformed

    public void Enviar(){
        Formatter strSaidaAux = null;
        Scanner strEntrada = null;
        InstructionRecord record = new InstructionRecord();
        Converter cv = new Converter();
        int a = cv.HexatoDec(ADDRfixo);

        try {
            strEntrada = new Scanner(new File("microprog.txt"));

            strSaidaAux = new Formatter("microprog2.txt");
        } catch (FileNotFoundException ex) { }
        try{
            int k = 0;
             while(strEntrada.hasNext()){
                 if(k==a){
                     for(int i = 0; i<numeroMI;i++){
                         record.setMicroCodigo(codMI[i]);
                        strSaidaAux.format("%s\n", record.getMicroCodigo());
                        strEntrada.next();
                     }
                 }

                 record.setMicroCodigo(strEntrada.next());
                 strSaidaAux.format("%s\n", record.getMicroCodigo());
                 k++;
             }
             
             strSaidaAux.close();

         }
         catch(NoSuchElementException e){
            javax.swing.JOptionPane.showMessageDialog(null, "Erro ao ler o arquivo. Verifique se o arquivo microprog.txt est√° no diret√≥rio do programa ou se o c√≥digo hexadecimal e o n√∫mero de microinstru√ß√µes est√£o coerentes.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            strEntrada.close();
        }

        strEntrada.close();
        strSaidaAux.close();

        File arquivo1 = new File("microprog.txt");
        File arquivo2 = new File("microprog2.txt");
        arquivo1.delete();
        arquivo2.renameTo(arquivo1);



        Main.mf.lmp.initMatrixMP();

        Main.mf.lmp.model.matrixx  = Main.mf.lmp.matrix;
        Main.mf.lmp.model.fireTableDataChanged();

        EscreveMicroProg emp = new EscreveMicroProg();
        emp.AdicionaMapa(a, Nome);
        javax.swing.JOptionPane.showMessageDialog(null, "Nova instru√ß√£o fora adicionada com sucesso!");
        this.setVisible(false);
         
    }
    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        if(numeroMI>0){
            Enviar();
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "Instru√ß√£o sem nehuma microinstru√ß√£o para se adicionar!");
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed

        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MBR1";
            jTextField1.setText(jTextField1.getText() + "  MBR1" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MBR1U";
            jTextField1.setText(jTextField1.getText() + "  MBR1U" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        HelpDialog hd = new HelpDialog(new javax.swing.JFrame(), false);
        hd.setVisible(true);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed

        if(numeroDaParteMI<20){
            parteMI[numeroDaParteMI] = "MBR2U";
            jTextField1.setText(jTextField1.getText() + "  MBR2U" );
            numeroDaParteMI++;
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "O limite de itens da instru√ß√£o est√° completo!");
    }//GEN-LAST:event_jButton32ActionPerformed


    public int Compila(){


        if(numeroDaParteMI>0){
            for(int i = 0; i<numeroDaParteMI;i++){
                if(parteMI[i].equals("RD;")){
                    if(AcessoMem == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Acesso a mem√≥ria j√° est√° sendo feito! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        AcessoMem = true;
                        Mem = "01";
                    }
                }
                else if(parteMI[i].equals("WR;")){
                    if(AcessoMem == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Acesso a mem√≥ria j√° est√° sendo feito! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        AcessoMem = true;
                        Mem = "10";
                    }
                }
                else if(parteMI[i].equals("Goto Addr;")){
                    if(Gotoselecionado == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Goto j√° fora selecionado! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        Gotoselecionado = true;
                        JMP[0] = '0';
                    }
                }
                else if(parteMI[i].equals("Goto MBR1;")){
                    if(Gotoselecionado == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Goto j√° fora selecionado! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        Gotoselecionado = true;
                        JMP[0] = '1';
                    }
                }
                else if(parteMI[i].equals("IF Z;")){
                    if(IFZselecionado == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! JMPZ j√° fora selecionado! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        IFZselecionado = true;
                        JMP[2] = '1';
                    }
                }
                else if(parteMI[i].equals("IF N;")){
                    if(IFNselecionado == true){
                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! JMPN j√° fora selecionado! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                        return 0;
                    }
                    else{
                        IFNselecionado = true;
                        JMP[1] = '1';
                    }
                }
                
                if(parteMI[i+1] != null){
                    if(parteMI[i+1].equals("=")){
                    
                        BitsBarramento bt = new BitsBarramento();
                        bt.DeterminaBarramentoC(parteMI[i]);
                        if(bt.posicaoC == -1){
                            javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador inv√°lido! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                            return 0;
                        }
                        else{
                            if(parteMI[i+2]!= null){
                                
                                arrayC[bt.posicaoC] = '1';

                            }
                            else{
                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Nada sendo atribu√≠do! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                return 0;
                            }
                        }
                    }
                }

                
                if (parteMI[i+2] != null){
                    if(parteMI[i].equals("=")){
                        
                        if(parteMI[i+2].equals("=")){
                            BitsBarramento bt = new BitsBarramento();
                            bt.DeterminaBarramentoC(parteMI[i+1]);
                            if(bt.posicaoC == -1){
                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                return 0;
                            }
                            else{
                                arrayC[bt.posicaoC] = '1';
                            }
                        }

                        
                        else if(parteMI[i+2].equals(";")){
                           BitsBarramento bt = new BitsBarramento();
                           int aux = bt.ehRegistrador(parteMI[i+1]);

                           if(aux == 1){
                               String straux = bt.DeterminaBarramentoA(parteMI[i+1]);
                               if(Aselecionado == false){
                                   
                                   if(straux != null){
                                       if(opULA == false){
                                           BarramentoA = straux;
                                           Aselecionado = true;
                                           ULA ="011000";
                                           opULA = true;
                                       }
                                       else{
                                           javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                            return 0;
                                       }
                                   }
                                   else{
                                       if(Bselecionado == false){
                                           if(opULA == false){
                                               BarramentoB = straux;
                                               Bselecionado = true;
                                               ULA = "010100";
                                               opULA = true;
                                           }
                                           else{
                                               javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                                return 0;
                                           }
                                       }
                                       else{
                                           javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador n√£o pertence ao barramento A e o barramento B j√° fora selecionado "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                           return 0;
                                       }
                                   }
                               }
                               else if(Bselecionado == false){
                                   straux = bt.DeterminaBarramentoB(parteMI[i+1]);
                                   if(straux != null){
                                       if(opULA == false){
                                            BarramentoB = straux;
                                            Bselecionado = true;
                                            ULA = "010100";
                                             opULA = true;
                                       }
                                       else{
                                           javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                          return 0;
                                       }
                                   }
                                   else{
                                       javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador n√£o pertence ao barramento B e o barramento A j√° fora selecionado "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                       return 0;
                                   }
                               }
                               else{
                                   javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registradores do barramento A e B j√° foram selecionados "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                   return 0;
                               }
                           }
                           
                           else{
                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Atribui√ß√£o inv√°lida! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                return 0;
                           }
                           
                        }
                        
                        else if(parteMI[i+2].equals("+")){
                            if(parteMI[i+4]!=null){

                            if(parteMI[i+3].equals("1")){
                                BitsBarramento bt = new BitsBarramento();
                                int aux = bt.ehRegistrador(parteMI[i+1]);
                                if(aux ==1){
                                     String straux = bt.DeterminaBarramentoA(parteMI[i+1]);

                                     if(Aselecionado == false){
                                         if(straux != null){
                                             if(opULA == false){
                                                BarramentoA = straux;
                                                Aselecionado = true;
                                                ULA ="111001";
                                                opULA = true;
                                            }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                    return 0;
                                            }
                                         }
                                         else{
                                             if(Bselecionado == false){
                                                if(opULA == false){
                                                    BarramentoB = straux;
                                                    Bselecionado = true;
                                                    ULA = "110101";
                                                    opULA = true;
                                                }
                                                else{
                                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                     return 0;
                                                 }
                                             }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador n√£o pertence ao barramento A e o barramento B j√° fora selecionado "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                                return 0;
                                            }
                                         }

                                     }
                                     else if(Bselecionado == false){
                                        straux = bt.DeterminaBarramentoB(parteMI[i+1]);
                                        if(straux != null){
                                            if(opULA == false){
                                                 BarramentoB = straux;
                                                 Bselecionado = true;
                                                 ULA = "110101";
                                                   opULA = true;
                                              }
                                             else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                                return 0;
                                             }
                                         }
                                          else{
                                             javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador n√£o pertence ao barramento B e o barramento A j√° fora selecionado "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                             return 0;
                                         }
                                    }
                                    else{
                                           javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registradores do barramento A e B j√° foram selecionados "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                        return 0;
                                     }

                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Atribui√ß√£o inv√°lida! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                                    return 0;
                                }

                            }
                            else{
                                BitsBarramento bt = new BitsBarramento();
                                String straux = bt.DeterminaBarramentoA(parteMI[i+1]);
                                if(straux != null){
                                    if(Aselecionado==false){
                                        String straux2 = bt.DeterminaBarramentoB(parteMI[i+3]);
                                        if(straux2 != null){
                                            if(Bselecionado==false){
                                                if(opULA == false){
                                                    BarramentoA = straux;
                                                    BarramentoB = straux2;
                                                    Bselecionado = true;
                                                    Aselecionado = true;
                                                    ULA = "111100";
                                                    opULA = true;
                                                }
                                                 else{
                                                  javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                  return 0;
                                                }
                                            }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento B j√° est√° sendo usado! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                                return 0;
                                            }
                                        }
                                        else{
                                            javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Segundo operando inv√°lido! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                            return 0;
                                        }
                                    }
                                    else{
                                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento A j√° est√° sendo usado! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                        return 0;
                                    }

                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Primeiro operando inv√°lido! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                    return 0;
                                }

                            }

                            if(parteMI[i+4].equals(";")==false){
                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; na posi√ß√£o "+String.valueOf(i+4)+" ");
                                return 0;
                            }
                            


                            }
                            else{
                                if(parteMI[i+3] != null){
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; depois do "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                    return 0;
                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Atribui√ß√£o inv√°lida! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                                    return 0;
                                }
                            }
                            
                        }



                        
                        else if(parteMI[i+2].equals("-")){
                            if(parteMI[i+4]!=null){
                                if(parteMI[i+3].equals("1")){
                                    BitsBarramento bt = new BitsBarramento();
                                    String straux = bt.DeterminaBarramentoB(parteMI[i+1]);
                                    if(straux != null){
                                        if(Bselecionado==false){
                                            if(opULA == false){
                                                BarramentoB = straux;
                                                Bselecionado = true;                                                
                                                ULA = "110110";
                                                opULA = true;
                                            }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                return 0;
                                            }

                                        }
                                        else{
                                            javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento B j√° est√° sendo usado! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                            return 0;
                                        }

                                    }
                                    else{
                                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Primeiro operando inv√°lido! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                        return 0;
                                    }
                                }
                                else{
                                    BitsBarramento bt = new BitsBarramento();
                                    String straux = bt.DeterminaBarramentoA(parteMI[i+3]);
                                    if(straux !=null){
                                        if(Aselecionado == false){
                                            String straux2 = bt.DeterminaBarramentoB(parteMI[i+1]);
                                            if(straux2 !=null){
                                                if(Bselecionado==false){
                                                    if(opULA == false){
                                                        BarramentoA = straux;
                                                        BarramentoB = straux2;
                                                        Bselecionado = true;
                                                        Aselecionado = true;
                                                        ULA = "111111";
                                                        opULA = true;

                                                    }
                                                    else{
                                                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                        return 0;
                                                    }
                                                }
                                                else{
                                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento B j√° est√° sendo usado! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                                    return 0;
                                                }

                                            }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Primeiro operando inv√°lido! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                                return 0;
                                            }

                                        }
                                        else{
                                            javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento A j√° est√° sendo usado! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                            return 0;
                                        }

                                    }
                                    else{
                                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Segundo operando inv√°lido! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                        return 0;
                                    }
                                }

                                if(parteMI[i+4].equals(";")==false){
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; na posi√ß√£o "+String.valueOf(i+4)+" ");
                                    return 0;
                                }
                            }
                            else{
                                if(parteMI[i+3] != null){
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; depois do "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                    return 0;
                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Atribui√ß√£o inv√°lida! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                                    return 0;
                                }
                            }


                        }
                        else if(parteMI[i+2].equals("AND") || parteMI[i+2].equals("OR")){
                            if(parteMI[i+4]!=null){
                                BitsBarramento bt = new BitsBarramento();
                                String straux = bt.DeterminaBarramentoA(parteMI[i+1]);
                                if(straux !=null){
                                    if(Aselecionado == false){
                                        String straux2 = bt.DeterminaBarramentoB(parteMI[i+3]);
                                        if(straux2 !=null){
                                            if(Bselecionado==false){
                                                if(opULA == false){
                                                    BarramentoA = straux;
                                                    BarramentoB = straux2;
                                                    Bselecionado = true;
                                                    Aselecionado = true;
                                                    if(parteMI[i+2].equals("AND"))
                                                        ULA = "001100";
                                                    else
                                                        ULA = "011100";
                                                    opULA = true;

                                                }
                                                else{
                                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Opera√ß√£o da ULA j√° fora selecionada! "+parteMI[i+2]+" na posi√ß√£o "+String.valueOf(i+2)+"");
                                                    return 0;
                                                }

                                            }
                                            else{
                                                javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento B j√° est√° sendo usado! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                                return 0;
                                            }

                                        }
                                        else{
                                            javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Segundo operando inv√°lido! "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                            return 0;
                                        }
                                    }
                                    else{
                                        javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Registrador do Barramento A j√° est√° sendo usado! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                        return 0;
                                    }

                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Primeiro operando inv√°lido! "+parteMI[i+1]+" na posi√ß√£o "+String.valueOf(i+1)+"");
                                    return 0;
                                }

                                if(parteMI[i+4].equals(";")==false){
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; na posi√ß√£o "+String.valueOf(i+4)+" ");
                                    return 0;
                                }

                            }
                            else{
                                if(parteMI[i+3] != null){
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Falta o ; depois do "+parteMI[i+3]+" na posi√ß√£o "+String.valueOf(i+3)+"");
                                    return 0;
                                }
                                else{
                                    javax.swing.JOptionPane.showMessageDialog(null, "ERROR! Atribui√ß√£o inv√°lida! "+parteMI[i]+" na posi√ß√£o "+String.valueOf(i)+"");
                                    return 0;
                                }
                            }
                        }
                        
                    }
                }
                
            }
        }
        else{
            javax.swing.JOptionPane.showMessageDialog(null, "Por favor insira os comandos da instru√ß√£o");
            return 0;
        }

        javax.swing.JOptionPane.showMessageDialog(null, "Compila√ß√£o fora efetuada com sucesso!");



        Converter cv = new Converter();

        int aux = cv.HexatoDec(ADDR);
        aux++;
        String s = cv.DectoHexa(aux);
        String a = cv.HexatoBin(s);
        String opcao = javax.swing.JOptionPane.showInputDialog("C√≥digo gerado foi: "+a + " "+String.valueOf(JMP)+" "+ULA+" "+String.valueOf(arrayC)+" "+ Mem +" "+ BarramentoA+" "+BarramentoB+". Deseja inser√≠-lo? (S/N)");

        if(opcao == null)
            return 0;
        
        if(opcao.equalsIgnoreCase("s")){
            codMI[numeroMI] = a+String.valueOf(JMP)+ULA+String.valueOf(arrayC)+ Mem + BarramentoA+BarramentoB;
            numeroMI++;
            matrix = new String[numeroMI][2];
            for(int i=0;i<numeroMI;i++){
                matrix[i][0] = Nome+ String.valueOf(i+1);
                matrix[i][1] = "      "+codMI[i];
            }

            model.count = numeroMI;
            model.matrixx = matrix;
            model.fireTableStructureChanged();
            ADDR = s;
            
        }
        else{
            return 0;
        }
        
        //  colocar o addr
        System.out.println( a + " "+String.valueOf(JMP)+" "+ULA+" "+String.valueOf(arrayC)+" "+ Mem +" "+ BarramentoA+" "+BarramentoB);
        return 1;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddDialog dialog = new AddDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
